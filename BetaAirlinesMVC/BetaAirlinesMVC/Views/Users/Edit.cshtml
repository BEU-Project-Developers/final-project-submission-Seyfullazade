@model BetaAirlinesMVC.Models.User

@{
    ViewBag.Title = "Edit User";
    Layout = "~/Views/Shared/_BetaAirlinesLayout.cshtml";
}

<section class="content flexcolumn">
    <h2>@ViewBag.Title</h2>

    @using (Html.BeginForm("Edit", "Users", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
    {
        @Html.AntiForgeryToken()

        <div class="form-group">
            @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "control-label col-md-3" })
            <div class="col-md-9">
                @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control", placeholder = "Enter first name" } })
                @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "control-label col-md-3" })
            <div class="col-md-9">
                @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control", placeholder = "Enter last name" } })
                @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Username, htmlAttributes: new { @class = "control-label col-md-3" })
            <div class="col-md-9">
                @Html.EditorFor(model => model.Username, new { htmlAttributes = new { @class = "form-control", placeholder = "Enter username" } })
                @Html.ValidationMessageFor(model => model.Username, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label col-md-3" })
            <div class="col-md-9">
                @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control", placeholder = "Enter password", type = "password" } })
                @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.RegisteredDate, htmlAttributes: new { @class = "control-label col-md-3" })
            <div class="col-md-9">
                @Html.DisplayFor(model => model.RegisteredDate, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.UserRoleID, "User Role", htmlAttributes: new { @class = "control-label col-md-3" })
            <div class="col-md-9">
                @Html.DropDownList("UserRoleID", null, "Select user role", htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.UserRoleID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Active, htmlAttributes: new { @class = "control-label col-md-3" })
            <div class="col-md-9">
                @Html.DropDownListFor(model => model.Active, new[]
                {
                    new SelectListItem { Text = "Active", Value = "true" },
                    new SelectListItem { Text = "Inactive", Value = "false" }
                }, "Select status", htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Active, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-3 col-md-9">
                <button type="submit" class="btn btn-warning">Save</button>
            </div>
        </div>
    }

    <div class="backLink">
        @Html.ActionLink("Back to List", "Index", null, new { @class = "btn btn-link" })
    </div>

</section>

<style>
    /* Custom CSS for Edit User Form */
    .content {
        padding: 20px;
        background: #fff;
        border-radius: 8px;
        box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
    }

    .control-label {
        font-weight: bold;
        text-align: right;
    }

    .form-control {
        width: 100%;
        padding: 8px;
        border: 1px solid #ccc;
        border-radius: 4px;
        box-shadow: inset 0 1px 3px rgba(0, 0, 0, 0.1);
        transition: border-color 0.3s, box-shadow 0.3s;
    }

        .form-control:focus {
            border-color: #66afe9;
            box-shadow: 0 0 8px rgba(102, 175, 233, 0.6);
        }

    .text-danger {
        color: #dc3545;
    }

    .btn {
        padding: 10px 20px;
        border: none;
        border-radius: 4px;
        color: #fff;
        background-color: #ffc107; /* Update with your desired button color */
        cursor: pointer;
        transition: background-color 0.3s;
    }

        .btn:hover {
            background-color: #e0a800; /* Update with hover color */
        }

    .backLink {
        margin-top: 20px;
    }

        .backLink .btn-link {
            color: #007bff;
            text-decoration: none;
            padding: 5px 10px;
        }

            .backLink .btn-link:hover {
                text-decoration: underline;
            }
</style>
